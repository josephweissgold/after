{"ast":null,"code":"var _jsxFileName = \"/Users/josephweissgold/Dropbox/** After/StarterPackApp/starter-pack-app/src/NoteList.js\";\nimport React from 'react';\nimport Note from './Note';\n\nfunction TodoList({\n  notes,\n  removeNote,\n  toggleNote,\n  editNote\n}) {\n  if (notes.length) return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, todos.map((todo, i) =>\n  /*#__PURE__*/\n  // To add a key to a fragment, we have to use the long-hand version\n  // rather than <> </>, we have to use <React.Fragment>\n  React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Todo, Object.assign({}, note, {\n    key: note.id,\n    removeNote: removeNote,\n    toggleNote: toggleNote,\n    editNote: editNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })), i < todos.length - 1 && /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 32\n    }\n  }))));\n  return null;\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/josephweissgold/Dropbox/** After/StarterPackApp/starter-pack-app/src/NoteList.js"],"names":["React","Note","TodoList","notes","removeNote","toggleNote","editNote","length","todos","map","todo","i","note","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,UAArB;AAAiCC,EAAAA;AAAjC,CAAnB,EAA+D;AAC9D,MAAIH,KAAK,CAACI,MAAV,EACC,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP;AAAA;AACV;AACA;AACA;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,oBACKC,IADL;AAEC,IAAA,GAAG,EAAEA,IAAI,CAACC,EAFX;AAGC,IAAA,UAAU,EAAET,UAHb;AAIC,IAAA,UAAU,EAAEC,UAJb;AAKC,IAAA,QAAQ,EAAEC,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,EAQEK,CAAC,GAAGH,KAAK,CAACD,MAAN,GAAe,CAAnB,iBAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR1B,CAHA,CADF,CADD;AAkBD,SAAO,IAAP;AACA;;AACD,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport Note from './Note';\n\nfunction TodoList ({ notes, removeNote, toggleNote, editNote }){\n\tif (notes.length)\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{todos.map((todo, i) => (\n\t\t\t\t\t// To add a key to a fragment, we have to use the long-hand version\n\t\t\t\t\t// rather than <> </>, we have to use <React.Fragment>\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\t\tremoveNote={removeNote}\n\t\t\t\t\t\t\ttoggleNote={toggleNote}\n\t\t\t\t\t\t\teditNote={editNote}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{i < todos.length - 1 && <Divider />}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\treturn null;\n}\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}