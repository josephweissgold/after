{"ast":null,"code":"import _objectSpread from\"/Users/josephweissgold/Documents/GitHub/after/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/josephweissgold/Documents/GitHub/after/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import uuid from'uuid/v4';var noteReducer=function noteReducer(state,action){switch(action.type){case'add':return[].concat(_toConsumableArray(state),[{id:uuid(),note:action.note,completed:false}]);case'remove':return state.filter(function(n){return n.id!==action.id;});case'toggle':return state.map(function(n){return n.id===action.id?_objectSpread({},n,{completed:!n.completed}):n;});case'edit':return state.map(function(n){return n.id===action.id?_objectSpread({},n,{note:action.editedNote}):n;});default:return state;}};export default noteReducer;","map":{"version":3,"sources":["/Users/josephweissgold/Documents/GitHub/after/src/reducers/NoteReducer.js"],"names":["uuid","noteReducer","state","action","type","id","note","completed","filter","n","map","editedNote"],"mappings":"+UAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtC,OAAQA,MAAM,CAACC,IAAf,EACC,IAAK,KAAL,CACC,mCACIF,KADJ,GAEC,CAAEG,EAAE,CAAEL,IAAI,EAAV,CAAcM,IAAI,CAAEH,MAAM,CAACG,IAA3B,CAAiCC,SAAS,CAAE,KAA5C,CAFD,GAID,IAAK,QAAL,CACC,MAAOL,CAAAA,KAAK,CAACM,MAAN,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACJ,EAAF,GAASF,MAAM,CAACE,EAAvB,EAAb,CAAP,CACD,IAAK,QAAL,CACC,MAAOH,CAAAA,KAAK,CAACQ,GAAN,CAAU,SAACD,CAAD,QAAQA,CAAAA,CAAC,CAACJ,EAAF,GAASF,MAAM,CAACE,EAAhB,kBAA0BI,CAA1B,EAA6BF,SAAS,CAAE,CAACE,CAAC,CAACF,SAA3C,GAAyDE,CAAjE,EAAV,CAAP,CACD,IAAK,MAAL,CACC,MAAOP,CAAAA,KAAK,CAACQ,GAAN,CAAU,SAACD,CAAD,QAAQA,CAAAA,CAAC,CAACJ,EAAF,GAASF,MAAM,CAACE,EAAhB,kBAA0BI,CAA1B,EAA6BH,IAAI,CAAEH,MAAM,CAACQ,UAA1C,GAAyDF,CAAjE,EAAV,CAAP,CACD,QACC,MAAOP,CAAAA,KAAP,CAbF,CAeA,CAhBD,CAkBA,cAAeD,CAAAA,WAAf","sourcesContent":["import uuid from 'uuid/v4';\n\nconst noteReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'add':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{ id: uuid(), note: action.note, completed: false }\n\t\t\t];\n\t\tcase 'remove':\n\t\t\treturn state.filter((n) => n.id !== action.id);\n\t\tcase 'toggle':\n\t\t\treturn state.map((n) => (n.id === action.id ? { ...n, completed: !n.completed } : n));\n\t\tcase 'edit':\n\t\t\treturn state.map((n) => (n.id === action.id ? { ...n, note: action.editedNote } : n));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default noteReducer;\n"]},"metadata":{},"sourceType":"module"}