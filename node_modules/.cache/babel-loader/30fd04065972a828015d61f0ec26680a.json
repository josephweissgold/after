{"ast":null,"code":"import uuid from 'uuid/v4';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add':\n      return [...state, {\n        id: uuid(),\n        note: action.note,\n        completed: false\n      }];\n\n    case 'remove':\n      return state.filter(n => n.id !== action.id);\n\n    case 'toggle':\n      return state.map(n => n.id === action.id ? { ...n,\n        completed: !n.completed\n      } : n);\n\n    case 'edit':\n      return state.map(n => n.id === action.id ? { ...n,\n        note: action.editedNote\n      } : n);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/josephweissgold/Dropbox/** After/StarterPackApp/starter-pack-app/src/reducers/NoteReducer.js"],"names":["uuid","reducer","state","action","type","id","note","completed","filter","n","map","editedNote"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,KAAL;AACC,aAAO,CACN,GAAGF,KADG,EAEN;AAAEG,QAAAA,EAAE,EAAEL,IAAI,EAAV;AAAcM,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAA3B;AAAiCC,QAAAA,SAAS,EAAE;AAA5C,OAFM,CAAP;;AAID,SAAK,QAAL;AACC,aAAOL,KAAK,CAACM,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASF,MAAM,CAACE,EAApC,CAAP;;AACD,SAAK,QAAL;AACC,aAAOH,KAAK,CAACQ,GAAN,CAAWD,CAAD,IAAQA,CAAC,CAACJ,EAAF,KAASF,MAAM,CAACE,EAAhB,GAAqB,EAAE,GAAGI,CAAL;AAAQF,QAAAA,SAAS,EAAE,CAACE,CAAC,CAACF;AAAtB,OAArB,GAAyDE,CAA3E,CAAP;;AACD,SAAK,MAAL;AACC,aAAOP,KAAK,CAACQ,GAAN,CAAWD,CAAD,IAAQA,CAAC,CAACJ,EAAF,KAASF,MAAM,CAACE,EAAhB,GAAqB,EAAE,GAAGI,CAAL;AAAQH,QAAAA,IAAI,EAAEH,MAAM,CAACQ;AAArB,OAArB,GAAyDF,CAA3E,CAAP;;AACD;AACC,aAAOP,KAAP;AAbF;AAeA,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["import uuid from 'uuid/v4';\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'add':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{ id: uuid(), note: action.note, completed: false }\n\t\t\t];\n\t\tcase 'remove':\n\t\t\treturn state.filter((n) => n.id !== action.id);\n\t\tcase 'toggle':\n\t\t\treturn state.map((n) => (n.id === action.id ? { ...n, completed: !n.completed } : n));\n\t\tcase 'edit':\n\t\t\treturn state.map((n) => (n.id === action.id ? { ...n, note: action.editedNote } : n));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}