{"ast":null,"code":"import { useLocalStorageReducer } from './useLocalStorageReducer';\nimport uuid from 'uuid/v4';\nexport default (initialNotes => {\n  const [notes, setNotes] = useLocalStorageReducer('notes', initialNotes);\n  return {\n    notes,\n    addNote: newNoteText => {\n      setNotes([...notes, {\n        id: uuid(),\n        note: newNoteText,\n        completed: false\n      }]);\n    },\n    removeNote: noteId => {\n      //filter out removed todo\n      const updatedNotes = notes.filter(n => n.id !== noteId); //call setNotes with new notes array\n\n      setNotes(updatedNotes);\n    },\n    toggleNote: noteId => {\n      const updatedNotes = notes.map(n => n.id === noteId ? { ...n,\n        completed: !n.completed\n      } : n);\n      setNotes(updatedNotes);\n    },\n    editNote: (noteId, newNote) => {\n      const updatedNotes = notes.map(n => n.id === noteId ? { ...n,\n        note: newNote\n      } : n);\n      setNotes(updatedNotes);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/josephweissgold/Dropbox/** After/StarterPackApp/starter-pack-app/src/hooks/useNoteState.js"],"names":["useLocalStorageReducer","uuid","initialNotes","notes","setNotes","addNote","newNoteText","id","note","completed","removeNote","noteId","updatedNotes","filter","n","toggleNote","map","editNote","newNote"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,0BAAvC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,gBAAgBC,YAAD,IAAkB;AAChC,QAAM,CACLC,KADK,EAELC,QAFK,IAGFJ,sBAAsB,CAAC,OAAD,EAAUE,YAAV,CAH1B;AAIA,SAAO;AACNC,IAAAA,KADM;AAENE,IAAAA,OAAO,EAAGC,WAAD,IAAiB;AACzBF,MAAAA,QAAQ,CAAC,CACR,GAAGD,KADK,EAER;AAAEI,QAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,QAAAA,IAAI,EAAEF,WAApB;AAAiCG,QAAAA,SAAS,EAAE;AAA5C,OAFQ,CAAD,CAAR;AAIA,KAPK;AAQNC,IAAAA,UAAU,EAAGC,MAAD,IAAY;AACvB;AACA,YAAMC,YAAY,GAAGT,KAAK,CAACU,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACP,EAAF,KAASI,MAA7B,CAArB,CAFuB,CAGvB;;AACAP,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACA,KAbK;AAcNG,IAAAA,UAAU,EAAGJ,MAAD,IAAY;AACvB,YAAMC,YAAY,GAAGT,KAAK,CAACa,GAAN,CAAWF,CAAD,IAAQA,CAAC,CAACP,EAAF,KAASI,MAAT,GAAkB,EAAE,GAAGG,CAAL;AAAQL,QAAAA,SAAS,EAAE,CAACK,CAAC,CAACL;AAAtB,OAAlB,GAAsDK,CAAxE,CAArB;AACAV,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACA,KAjBK;AAkBNK,IAAAA,QAAQ,EAAE,CAACN,MAAD,EAASO,OAAT,KAAqB;AAC9B,YAAMN,YAAY,GAAGT,KAAK,CAACa,GAAN,CAAWF,CAAD,IAAQA,CAAC,CAACP,EAAF,KAASI,MAAT,GAAkB,EAAE,GAAGG,CAAL;AAAQN,QAAAA,IAAI,EAAEU;AAAd,OAAlB,GAA4CJ,CAA9D,CAArB;AACAV,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACA;AArBK,GAAP;AAuBA,CA5BD","sourcesContent":["import { useLocalStorageReducer } from './useLocalStorageReducer';\nimport uuid from 'uuid/v4';\nexport default (initialNotes) => {\n\tconst [\n\t\tnotes,\n\t\tsetNotes\n\t] = useLocalStorageReducer('notes', initialNotes);\n\treturn {\n\t\tnotes,\n\t\taddNote: (newNoteText) => {\n\t\t\tsetNotes([\n\t\t\t\t...notes,\n\t\t\t\t{ id: uuid(), note: newNoteText, completed: false }\n\t\t\t]);\n\t\t},\n\t\tremoveNote: (noteId) => {\n\t\t\t//filter out removed todo\n\t\t\tconst updatedNotes = notes.filter((n) => n.id !== noteId);\n\t\t\t//call setNotes with new notes array\n\t\t\tsetNotes(updatedNotes);\n\t\t},\n\t\ttoggleNote: (noteId) => {\n\t\t\tconst updatedNotes = notes.map((n) => (n.id === noteId ? { ...n, completed: !n.completed } : n));\n\t\t\tsetNotes(updatedNotes);\n\t\t},\n\t\teditNote: (noteId, newNote) => {\n\t\t\tconst updatedNotes = notes.map((n) => (n.id === noteId ? { ...n, note: newNote } : n));\n\t\t\tsetNotes(updatedNotes);\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}